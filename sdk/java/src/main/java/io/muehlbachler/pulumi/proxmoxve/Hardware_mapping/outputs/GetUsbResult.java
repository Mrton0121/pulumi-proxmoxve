// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import io.muehlbachler.pulumi.proxmoxve.Hardware_mapping.outputs.GetUsbMap;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUsbResult {
    /**
     * @return The comment of this USB hardware mapping.
     * 
     */
    private String comment;
    /**
     * @return The unique identifier of this USB hardware mapping data source.
     * 
     */
    private String id;
    /**
     * @return The actual map of devices for the hardware mapping.
     * 
     */
    private List<GetUsbMap> maps;
    /**
     * @return The name of this USB hardware mapping.
     * 
     */
    private String name;

    private GetUsbResult() {}
    /**
     * @return The comment of this USB hardware mapping.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return The unique identifier of this USB hardware mapping data source.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The actual map of devices for the hardware mapping.
     * 
     */
    public List<GetUsbMap> maps() {
        return this.maps;
    }
    /**
     * @return The name of this USB hardware mapping.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsbResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String id;
        private List<GetUsbMap> maps;
        private String name;
        public Builder() {}
        public Builder(GetUsbResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.id = defaults.id;
    	      this.maps = defaults.maps;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetUsbResult", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUsbResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder maps(List<GetUsbMap> maps) {
            if (maps == null) {
              throw new MissingRequiredPropertyException("GetUsbResult", "maps");
            }
            this.maps = maps;
            return this;
        }
        public Builder maps(GetUsbMap... maps) {
            return maps(List.of(maps));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUsbResult", "name");
            }
            this.name = name;
            return this;
        }
        public GetUsbResult build() {
            final var _resultValue = new GetUsbResult();
            _resultValue.comment = comment;
            _resultValue.id = id;
            _resultValue.maps = maps;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
