// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AcmeAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AcmeAccountArgs Empty = new AcmeAccountArgs();

    /**
     * The contact email addresses.
     * 
     */
    @Import(name="contact", required=true)
    private Output<String> contact;

    /**
     * @return The contact email addresses.
     * 
     */
    public Output<String> contact() {
        return this.contact;
    }

    /**
     * The URL of the ACME CA directory endpoint.
     * 
     */
    @Import(name="directory")
    private @Nullable Output<String> directory;

    /**
     * @return The URL of the ACME CA directory endpoint.
     * 
     */
    public Optional<Output<String>> directory() {
        return Optional.ofNullable(this.directory);
    }

    /**
     * The HMAC key for External Account Binding.
     * 
     */
    @Import(name="eabHmacKey")
    private @Nullable Output<String> eabHmacKey;

    /**
     * @return The HMAC key for External Account Binding.
     * 
     */
    public Optional<Output<String>> eabHmacKey() {
        return Optional.ofNullable(this.eabHmacKey);
    }

    /**
     * The Key Identifier for External Account Binding.
     * 
     */
    @Import(name="eabKid")
    private @Nullable Output<String> eabKid;

    /**
     * @return The Key Identifier for External Account Binding.
     * 
     */
    public Optional<Output<String>> eabKid() {
        return Optional.ofNullable(this.eabKid);
    }

    /**
     * The ACME account config file name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The ACME account config file name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The URL of CA TermsOfService - setting this indicates agreement.
     * 
     */
    @Import(name="tos")
    private @Nullable Output<String> tos;

    /**
     * @return The URL of CA TermsOfService - setting this indicates agreement.
     * 
     */
    public Optional<Output<String>> tos() {
        return Optional.ofNullable(this.tos);
    }

    private AcmeAccountArgs() {}

    private AcmeAccountArgs(AcmeAccountArgs $) {
        this.contact = $.contact;
        this.directory = $.directory;
        this.eabHmacKey = $.eabHmacKey;
        this.eabKid = $.eabKid;
        this.name = $.name;
        this.tos = $.tos;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AcmeAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AcmeAccountArgs $;

        public Builder() {
            $ = new AcmeAccountArgs();
        }

        public Builder(AcmeAccountArgs defaults) {
            $ = new AcmeAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contact The contact email addresses.
         * 
         * @return builder
         * 
         */
        public Builder contact(Output<String> contact) {
            $.contact = contact;
            return this;
        }

        /**
         * @param contact The contact email addresses.
         * 
         * @return builder
         * 
         */
        public Builder contact(String contact) {
            return contact(Output.of(contact));
        }

        /**
         * @param directory The URL of the ACME CA directory endpoint.
         * 
         * @return builder
         * 
         */
        public Builder directory(@Nullable Output<String> directory) {
            $.directory = directory;
            return this;
        }

        /**
         * @param directory The URL of the ACME CA directory endpoint.
         * 
         * @return builder
         * 
         */
        public Builder directory(String directory) {
            return directory(Output.of(directory));
        }

        /**
         * @param eabHmacKey The HMAC key for External Account Binding.
         * 
         * @return builder
         * 
         */
        public Builder eabHmacKey(@Nullable Output<String> eabHmacKey) {
            $.eabHmacKey = eabHmacKey;
            return this;
        }

        /**
         * @param eabHmacKey The HMAC key for External Account Binding.
         * 
         * @return builder
         * 
         */
        public Builder eabHmacKey(String eabHmacKey) {
            return eabHmacKey(Output.of(eabHmacKey));
        }

        /**
         * @param eabKid The Key Identifier for External Account Binding.
         * 
         * @return builder
         * 
         */
        public Builder eabKid(@Nullable Output<String> eabKid) {
            $.eabKid = eabKid;
            return this;
        }

        /**
         * @param eabKid The Key Identifier for External Account Binding.
         * 
         * @return builder
         * 
         */
        public Builder eabKid(String eabKid) {
            return eabKid(Output.of(eabKid));
        }

        /**
         * @param name The ACME account config file name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The ACME account config file name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tos The URL of CA TermsOfService - setting this indicates agreement.
         * 
         * @return builder
         * 
         */
        public Builder tos(@Nullable Output<String> tos) {
            $.tos = tos;
            return this;
        }

        /**
         * @param tos The URL of CA TermsOfService - setting this indicates agreement.
         * 
         * @return builder
         * 
         */
        public Builder tos(String tos) {
            return tos(Output.of(tos));
        }

        public AcmeAccountArgs build() {
            if ($.contact == null) {
                throw new MissingRequiredPropertyException("AcmeAccountArgs", "contact");
            }
            return $;
        }
    }

}
