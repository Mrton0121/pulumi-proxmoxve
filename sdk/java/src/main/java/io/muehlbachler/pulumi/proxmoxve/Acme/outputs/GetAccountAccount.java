// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Acme.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountAccount {
    /**
     * @return An array of contact email addresses.
     * 
     */
    private List<String> contacts;
    /**
     * @return The timestamp of the account creation.
     * 
     */
    private String createdAt;
    /**
     * @return The status of the account. Can be one of `valid`, `deactivated` or `revoked`.
     * 
     */
    private String status;

    private GetAccountAccount() {}
    /**
     * @return An array of contact email addresses.
     * 
     */
    public List<String> contacts() {
        return this.contacts;
    }
    /**
     * @return The timestamp of the account creation.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The status of the account. Can be one of `valid`, `deactivated` or `revoked`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> contacts;
        private String createdAt;
        private String status;
        public Builder() {}
        public Builder(GetAccountAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contacts = defaults.contacts;
    	      this.createdAt = defaults.createdAt;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder contacts(List<String> contacts) {
            if (contacts == null) {
              throw new MissingRequiredPropertyException("GetAccountAccount", "contacts");
            }
            this.contacts = contacts;
            return this;
        }
        public Builder contacts(String... contacts) {
            return contacts(List.of(contacts));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetAccountAccount", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAccountAccount", "status");
            }
            this.status = status;
            return this;
        }
        public GetAccountAccount build() {
            final var _resultValue = new GetAccountAccount();
            _resultValue.contacts = contacts;
            _resultValue.createdAt = createdAt;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
