// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Cluster.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OptionsNextIdArgs extends com.pulumi.resources.ResourceArgs {

    public static final OptionsNextIdArgs Empty = new OptionsNextIdArgs();

    /**
     * The minimum number for the next free VM ID. Must be higher or equal to 100
     * 
     */
    @Import(name="lower")
    private @Nullable Output<Integer> lower;

    /**
     * @return The minimum number for the next free VM ID. Must be higher or equal to 100
     * 
     */
    public Optional<Output<Integer>> lower() {
        return Optional.ofNullable(this.lower);
    }

    /**
     * The maximum number for the next free VM ID. Must be less or equal to 999999999
     * 
     */
    @Import(name="upper")
    private @Nullable Output<Integer> upper;

    /**
     * @return The maximum number for the next free VM ID. Must be less or equal to 999999999
     * 
     */
    public Optional<Output<Integer>> upper() {
        return Optional.ofNullable(this.upper);
    }

    private OptionsNextIdArgs() {}

    private OptionsNextIdArgs(OptionsNextIdArgs $) {
        this.lower = $.lower;
        this.upper = $.upper;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OptionsNextIdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OptionsNextIdArgs $;

        public Builder() {
            $ = new OptionsNextIdArgs();
        }

        public Builder(OptionsNextIdArgs defaults) {
            $ = new OptionsNextIdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lower The minimum number for the next free VM ID. Must be higher or equal to 100
         * 
         * @return builder
         * 
         */
        public Builder lower(@Nullable Output<Integer> lower) {
            $.lower = lower;
            return this;
        }

        /**
         * @param lower The minimum number for the next free VM ID. Must be higher or equal to 100
         * 
         * @return builder
         * 
         */
        public Builder lower(Integer lower) {
            return lower(Output.of(lower));
        }

        /**
         * @param upper The maximum number for the next free VM ID. Must be less or equal to 999999999
         * 
         * @return builder
         * 
         */
        public Builder upper(@Nullable Output<Integer> upper) {
            $.upper = upper;
            return this;
        }

        /**
         * @param upper The maximum number for the next free VM ID. Must be less or equal to 999999999
         * 
         * @return builder
         * 
         */
        public Builder upper(Integer upper) {
            return upper(Output.of(upper));
        }

        public OptionsNextIdArgs build() {
            return $;
        }
    }

}
