// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Cluster.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OptionsNotify {
    /**
     * @return Cluster-wide notification settings for the HA fencing mode. Must be `always` | `never`.
     * 
     */
    private @Nullable String haFencingMode;
    /**
     * @return Cluster-wide notification settings for the HA fencing target.
     * 
     */
    private @Nullable String haFencingTarget;
    /**
     * @return Cluster-wide notification settings for package updates. Must be `auto` | `always` | `never`.
     * 
     */
    private @Nullable String packageUpdates;
    /**
     * @return Cluster-wide notification settings for the package updates target.
     * 
     */
    private @Nullable String packageUpdatesTarget;
    /**
     * @return Cluster-wide notification settings for replication. Must be `always` | `never`.
     * 
     */
    private @Nullable String replication;
    /**
     * @return Cluster-wide notification settings for the replication target.
     * 
     */
    private @Nullable String replicationTarget;

    private OptionsNotify() {}
    /**
     * @return Cluster-wide notification settings for the HA fencing mode. Must be `always` | `never`.
     * 
     */
    public Optional<String> haFencingMode() {
        return Optional.ofNullable(this.haFencingMode);
    }
    /**
     * @return Cluster-wide notification settings for the HA fencing target.
     * 
     */
    public Optional<String> haFencingTarget() {
        return Optional.ofNullable(this.haFencingTarget);
    }
    /**
     * @return Cluster-wide notification settings for package updates. Must be `auto` | `always` | `never`.
     * 
     */
    public Optional<String> packageUpdates() {
        return Optional.ofNullable(this.packageUpdates);
    }
    /**
     * @return Cluster-wide notification settings for the package updates target.
     * 
     */
    public Optional<String> packageUpdatesTarget() {
        return Optional.ofNullable(this.packageUpdatesTarget);
    }
    /**
     * @return Cluster-wide notification settings for replication. Must be `always` | `never`.
     * 
     */
    public Optional<String> replication() {
        return Optional.ofNullable(this.replication);
    }
    /**
     * @return Cluster-wide notification settings for the replication target.
     * 
     */
    public Optional<String> replicationTarget() {
        return Optional.ofNullable(this.replicationTarget);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OptionsNotify defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String haFencingMode;
        private @Nullable String haFencingTarget;
        private @Nullable String packageUpdates;
        private @Nullable String packageUpdatesTarget;
        private @Nullable String replication;
        private @Nullable String replicationTarget;
        public Builder() {}
        public Builder(OptionsNotify defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.haFencingMode = defaults.haFencingMode;
    	      this.haFencingTarget = defaults.haFencingTarget;
    	      this.packageUpdates = defaults.packageUpdates;
    	      this.packageUpdatesTarget = defaults.packageUpdatesTarget;
    	      this.replication = defaults.replication;
    	      this.replicationTarget = defaults.replicationTarget;
        }

        @CustomType.Setter
        public Builder haFencingMode(@Nullable String haFencingMode) {

            this.haFencingMode = haFencingMode;
            return this;
        }
        @CustomType.Setter
        public Builder haFencingTarget(@Nullable String haFencingTarget) {

            this.haFencingTarget = haFencingTarget;
            return this;
        }
        @CustomType.Setter
        public Builder packageUpdates(@Nullable String packageUpdates) {

            this.packageUpdates = packageUpdates;
            return this;
        }
        @CustomType.Setter
        public Builder packageUpdatesTarget(@Nullable String packageUpdatesTarget) {

            this.packageUpdatesTarget = packageUpdatesTarget;
            return this;
        }
        @CustomType.Setter
        public Builder replication(@Nullable String replication) {

            this.replication = replication;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTarget(@Nullable String replicationTarget) {

            this.replicationTarget = replicationTarget;
            return this;
        }
        public OptionsNotify build() {
            final var _resultValue = new OptionsNotify();
            _resultValue.haFencingMode = haFencingMode;
            _resultValue.haFencingTarget = haFencingTarget;
            _resultValue.packageUpdates = packageUpdates;
            _resultValue.packageUpdatesTarget = packageUpdatesTarget;
            _resultValue.replication = replication;
            _resultValue.replicationTarget = replicationTarget;
            return _resultValue;
        }
    }
}
