// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AcmeDnsPluginArgs extends com.pulumi.resources.ResourceArgs {

    public static final AcmeDnsPluginArgs Empty = new AcmeDnsPluginArgs();

    /**
     * API plugin name.
     * 
     */
    @Import(name="api", required=true)
    private Output<String> api;

    /**
     * @return API plugin name.
     * 
     */
    public Output<String> api() {
        return this.api;
    }

    /**
     * DNS plugin data.
     * 
     */
    @Import(name="data")
    private @Nullable Output<Map<String,String>> data;

    /**
     * @return DNS plugin data.
     * 
     */
    public Optional<Output<Map<String,String>>> data() {
        return Optional.ofNullable(this.data);
    }

    /**
     * SHA1 digest of the current configuration. Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.
     * 
     */
    @Import(name="digest")
    private @Nullable Output<String> digest;

    /**
     * @return SHA1 digest of the current configuration. Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.
     * 
     */
    public Optional<Output<String>> digest() {
        return Optional.ofNullable(this.digest);
    }

    /**
     * Flag to disable the config.
     * 
     */
    @Import(name="disable")
    private @Nullable Output<Boolean> disable;

    /**
     * @return Flag to disable the config.
     * 
     */
    public Optional<Output<Boolean>> disable() {
        return Optional.ofNullable(this.disable);
    }

    /**
     * ACME Plugin ID name.
     * 
     */
    @Import(name="plugin", required=true)
    private Output<String> plugin;

    /**
     * @return ACME Plugin ID name.
     * 
     */
    public Output<String> plugin() {
        return this.plugin;
    }

    /**
     * Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records (0 - 172800).
     * 
     */
    @Import(name="validationDelay")
    private @Nullable Output<Integer> validationDelay;

    /**
     * @return Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records (0 - 172800).
     * 
     */
    public Optional<Output<Integer>> validationDelay() {
        return Optional.ofNullable(this.validationDelay);
    }

    private AcmeDnsPluginArgs() {}

    private AcmeDnsPluginArgs(AcmeDnsPluginArgs $) {
        this.api = $.api;
        this.data = $.data;
        this.digest = $.digest;
        this.disable = $.disable;
        this.plugin = $.plugin;
        this.validationDelay = $.validationDelay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AcmeDnsPluginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AcmeDnsPluginArgs $;

        public Builder() {
            $ = new AcmeDnsPluginArgs();
        }

        public Builder(AcmeDnsPluginArgs defaults) {
            $ = new AcmeDnsPluginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param api API plugin name.
         * 
         * @return builder
         * 
         */
        public Builder api(Output<String> api) {
            $.api = api;
            return this;
        }

        /**
         * @param api API plugin name.
         * 
         * @return builder
         * 
         */
        public Builder api(String api) {
            return api(Output.of(api));
        }

        /**
         * @param data DNS plugin data.
         * 
         * @return builder
         * 
         */
        public Builder data(@Nullable Output<Map<String,String>> data) {
            $.data = data;
            return this;
        }

        /**
         * @param data DNS plugin data.
         * 
         * @return builder
         * 
         */
        public Builder data(Map<String,String> data) {
            return data(Output.of(data));
        }

        /**
         * @param digest SHA1 digest of the current configuration. Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.
         * 
         * @return builder
         * 
         */
        public Builder digest(@Nullable Output<String> digest) {
            $.digest = digest;
            return this;
        }

        /**
         * @param digest SHA1 digest of the current configuration. Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.
         * 
         * @return builder
         * 
         */
        public Builder digest(String digest) {
            return digest(Output.of(digest));
        }

        /**
         * @param disable Flag to disable the config.
         * 
         * @return builder
         * 
         */
        public Builder disable(@Nullable Output<Boolean> disable) {
            $.disable = disable;
            return this;
        }

        /**
         * @param disable Flag to disable the config.
         * 
         * @return builder
         * 
         */
        public Builder disable(Boolean disable) {
            return disable(Output.of(disable));
        }

        /**
         * @param plugin ACME Plugin ID name.
         * 
         * @return builder
         * 
         */
        public Builder plugin(Output<String> plugin) {
            $.plugin = plugin;
            return this;
        }

        /**
         * @param plugin ACME Plugin ID name.
         * 
         * @return builder
         * 
         */
        public Builder plugin(String plugin) {
            return plugin(Output.of(plugin));
        }

        /**
         * @param validationDelay Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records (0 - 172800).
         * 
         * @return builder
         * 
         */
        public Builder validationDelay(@Nullable Output<Integer> validationDelay) {
            $.validationDelay = validationDelay;
            return this;
        }

        /**
         * @param validationDelay Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records (0 - 172800).
         * 
         * @return builder
         * 
         */
        public Builder validationDelay(Integer validationDelay) {
            return validationDelay(Output.of(validationDelay));
        }

        public AcmeDnsPluginArgs build() {
            if ($.api == null) {
                throw new MissingRequiredPropertyException("AcmeDnsPluginArgs", "api");
            }
            if ($.plugin == null) {
                throw new MissingRequiredPropertyException("AcmeDnsPluginArgs", "plugin");
            }
            return $;
        }
    }

}
