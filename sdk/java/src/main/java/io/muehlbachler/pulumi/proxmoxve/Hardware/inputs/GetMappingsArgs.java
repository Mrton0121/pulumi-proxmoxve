// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Hardware.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMappingsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMappingsArgs Empty = new GetMappingsArgs();

    /**
     * The name of the node whose configurations should be checked for correctness.
     * 
     */
    @Import(name="checkNode")
    private @Nullable Output<String> checkNode;

    /**
     * @return The name of the node whose configurations should be checked for correctness.
     * 
     */
    public Optional<Output<String>> checkNode() {
        return Optional.ofNullable(this.checkNode);
    }

    /**
     * The type of the hardware mappings.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the hardware mappings.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetMappingsArgs() {}

    private GetMappingsArgs(GetMappingsArgs $) {
        this.checkNode = $.checkNode;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMappingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMappingsArgs $;

        public Builder() {
            $ = new GetMappingsArgs();
        }

        public Builder(GetMappingsArgs defaults) {
            $ = new GetMappingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param checkNode The name of the node whose configurations should be checked for correctness.
         * 
         * @return builder
         * 
         */
        public Builder checkNode(@Nullable Output<String> checkNode) {
            $.checkNode = checkNode;
            return this;
        }

        /**
         * @param checkNode The name of the node whose configurations should be checked for correctness.
         * 
         * @return builder
         * 
         */
        public Builder checkNode(String checkNode) {
            return checkNode(Output.of(checkNode));
        }

        /**
         * @param type The type of the hardware mappings.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the hardware mappings.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetMappingsArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetMappingsArgs", "type");
            }
            return $;
        }
    }

}
