// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.muehlbachler.pulumi.proxmoxve.Acme.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetPluginArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPluginArgs Empty = new GetPluginArgs();

    /**
     * ACME Plugin ID name.
     * 
     */
    @Import(name="plugin", required=true)
    private Output<String> plugin;

    /**
     * @return ACME Plugin ID name.
     * 
     */
    public Output<String> plugin() {
        return this.plugin;
    }

    private GetPluginArgs() {}

    private GetPluginArgs(GetPluginArgs $) {
        this.plugin = $.plugin;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPluginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPluginArgs $;

        public Builder() {
            $ = new GetPluginArgs();
        }

        public Builder(GetPluginArgs defaults) {
            $ = new GetPluginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param plugin ACME Plugin ID name.
         * 
         * @return builder
         * 
         */
        public Builder plugin(Output<String> plugin) {
            $.plugin = plugin;
            return this;
        }

        /**
         * @param plugin ACME Plugin ID name.
         * 
         * @return builder
         * 
         */
        public Builder plugin(String plugin) {
            return plugin(Output.of(plugin));
        }

        public GetPluginArgs build() {
            if ($.plugin == null) {
                throw new MissingRequiredPropertyException("GetPluginArgs", "plugin");
            }
            return $;
        }
    }

}
